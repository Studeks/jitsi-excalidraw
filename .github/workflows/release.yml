name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build excalidraw package
        run: |
          cd src/packages/excalidraw
          yarn install
          # Build with types (no linting)
          CI=false SKIP_LINT=true yarn build:umd:with-types
        env:
          HUSKY: 0

      - name: Create package structure and tarball
        run: |
          cd src/packages/excalidraw
          # Create a temporary directory for the package structure
          mkdir -p ../../../temp_package/package

          # Copy built files to the package directory
          cp -r dist/ ../../../temp_package/package/
          cp -r types/ ../../../temp_package/package/
          cp package.json ../../../temp_package/package/
          cp main.js ../../../temp_package/package/
          cp README.md ../../../temp_package/package/

          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/v}

          # Create tarball from temp_package so it contains package/ when extracted
          cd ../../../temp_package
          tar -czf ../jitsi-excalidraw-${VERSION}.tgz package/

          # Tarball is already in workspace root, no need to move

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: jitsi-excalidraw-${{ steps.get_version.outputs.VERSION }}.tgz
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
